# Loathsxome plugin: paginate
# Author: Abhijit Menon-Sen <ams@toroid.org>
#
# Splits the display into pages and acts on the ?page=NNN parameter.
#
# Configuration variables:
#
# $page_size defines the maximum number of entries per page.
#
# Template variables:
#
# $olderposts is a link to the previous page; empty on the last page.
# $newerposts is a link to the next page; empty on the first page.
# $pagelist is a list of links to pages; empty if there's only one page.
#
# All of this is relevant only to index views.

package loathsxome::paginate;

use CGI qw/param url/;
use POSIX qw/ceil/;

our $page_size = 5;
our ($page, $pages);

sub start {
    1;
}

sub sort {
    return undef if $loathsxome::post;

    $page = 1;
    if (param("page") =~ /^(\d+)$/) {
        $page = $1;
    }

    $pages = ceil(keys(%loathsxome::entries)/$page_size);
    $loathsxome::startnum = 1 + ($page_size * ($page-1));
    $loathsxome::endnum = $loathsxome::startnum+$page_size-1;

    # We don't actually want to override the sorting function.
    return undef;
}

sub head {
    my ($pkg, $post, $head) = @_;

    return if $post;

    $loathsxome::newerposts = "";
    if ($page > 1) {
        param(page => $page-1);
        my $url = url(-path_info => 1, -query => 1);
        $loathsxome::newerposts =
            qq{<a href="$url">&laquo; Newer posts</a>};
    }

    my @list;
    for my $n (1..$pages) {
        param(page => $n);
        my $url = url(-path_info => 1, -query => 1);

        push @list,
            $n == $page ?
                qq{<b>$n</b>} : qq{<a href="$url">$n</a>};
    }

    $loathsxome::pagelist = "";
    if (@list > 1) {
        $loathsxome::pagelist =
            "[" . join(' ', @list) . "]";
    }

    $loathsxome::olderposts = "";
    if ($pages > $page) {
        param(page => $page+1);
        my $url = url(-path_info => 1, -query => 1);
        $loathsxome::olderposts =
            qq{<a href="$url">Older posts &raquo;</a>};
    }
}

1;
